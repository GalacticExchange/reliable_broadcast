- hosts: all
  gather_facts: no
  sudo: true

  tasks:

    - name: Get running router process
      shell: "ps -ef |grep router |awk '{print $2}'"
      register: router_process

    - name: Get running broadcast process
      shell: "ps -ef |grep broadcast |awk '{print $2}'"
      register: broadcast_process

    - name: kill router process
      shell: "kill {{ item }}"
      with_items: "{{ router_process.stdout_lines }}"
      ignore_errors: yes

    - name: kill broadcast process
      shell: "kill {{ item }}"
      with_items: "{{ broadcast_process.stdout_lines }}"
      ignore_errors: yes

    - name: configure udp params
      shell: sysctl -w net.core.wmem_default=65536 && sysctl -w net.core.wmem_max=1677216 && \
        sysctl -w net.core.rmem_default=8388608 && sysctl -w net.core.rmem_max=1677216 && \
        sysctl -w net.ipv4.udp_mem='4096 1019887 8388608' && sysctl -w net.ipv4.route.flush=1 && \
        sysctl -w net.core.netdev_max_backlog=2000 && sysctl -w net.core.netdev_budget=600

    - git:
        repo: 'https://github.com/GalacticExchange/reliable_broadcast.git'
        dest: /home/ubuntu/reliable_broadcast
        version: master

    - name: clean dirs
      file:
        state: absent
        path: /tmp/node

    - name: create dirs
      file: path={{item.path}} state=directory recurse=yes
      with_items:
        - { path: '/tmp/node/m_chains' }
        - { path: '/tmp/node/pipes' }
        - { path: '/tmp/node/logs' }
        - { path: '/tmp/binaries' }


    - name: copy files
      copy: src={{ item.src }} dest={{ item.dest }} mode={{ item.mode }}
      with_items:
          - { src: "../tests/nodes/{{ inventory_hostname }}/node.json", dest: '/tmp/node/node.json', mode: '0644' }
          - { src: "../tests/nodes/{{ inventory_hostname }}/chain.json", dest: '/tmp/node/m_chains/chain.json', mode: '0644' }
          - { src: '../../broadcast', dest: '/tmp/binaries/broadcast', mode: '0755'  }
          - { src: '../../router/router', dest: '/tmp/binaries/router', mode: '0755' }



    - name: create pipes
      shell: "python pipe_controller.py /tmp/node/node.json /tmp/node/m_chains/chain.json"
      args:
        chdir: /home/ubuntu/reliable_broadcast/process_manager

    - name: run router
      shell: "nohup ./router /tmp/node/node.json > /tmp/node/logs/router.log &"
      args:
        chdir: /tmp/binaries

    - name: run broadcast
      shell: "nohup ./broadcast /tmp/node/node.json /tmp/node/m_chains/chain.json > /tmp/node/logs/broadcast.log &"
      args:
        chdir: /tmp/binaries

    - name: restart compose
      shell: "bash -c 'docker-compose down && docker-compose up -d' "
      args:
        chdir: /home/ubuntu/reliable_broadcast/ops/docker