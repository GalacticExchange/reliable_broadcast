// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: internal_message.capnp

#include "internal_message.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<115> b_9532ea162ee61fa5 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    165,  31, 230,  46,  22, 234,  50, 149,
     23,   0,   0,   0,   1,   0,   5,   0,
    230,  97,  14, 125, 246, 222,  77, 191,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  58,   1,   0,   0,
     37,   0,   0,   0,  23,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     49,   0,   0,   0,  87,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105, 110, 116, 101, 114, 110,  97, 108,
     95, 109, 101, 115, 115,  97, 103, 101,
     46,  99,  97, 112, 110, 112,  58,  73,
    110, 116, 101, 114, 110,  97, 108,  77,
    101, 115, 115,  97, 103, 101,   0,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
    199,  56,  14,  71,  45, 224,  24, 198,
      1,   0,   0,   0,  98,   0,   0,   0,
     77, 101, 115, 115,  97, 103, 101,  84,
    121, 112, 101,   0,   0,   0,   0,   0,
     24,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    153,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    152,   0,   0,   0,   3,   0,   1,   0,
    164,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    161,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    156,   0,   0,   0,   3,   0,   1,   0,
    168,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    165,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    164,   0,   0,   0,   3,   0,   1,   0,
    176,   0,   0,   0,   2,   0,   1,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    173,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    168,   0,   0,   0,   3,   0,   1,   0,
    180,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   3,   0,   0,   0,
      0,   0,   1,   0,   4,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    177,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    172,   0,   0,   0,   3,   0,   1,   0,
    184,   0,   0,   0,   2,   0,   1,   0,
      4,   0,   0,   0,  16,   0,   0,   0,
      0,   0,   1,   0,   5,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    181,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    176,   0,   0,   0,   3,   0,   1,   0,
    188,   0,   0,   0,   2,   0,   1,   0,
     99, 108, 105, 101, 110, 116,  73, 100,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    110, 111, 110,  99, 101,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,  99, 104,  97, 105, 110,  72,  97,
    115, 104,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 101, 115, 115,  97, 103, 101,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    110, 111, 100, 101,  73, 100,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 121, 112, 101,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
    199,  56,  14,  71,  45, 224,  24, 198,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_9532ea162ee61fa5 = b_9532ea162ee61fa5.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_9532ea162ee61fa5[] = {
  &s_c618e02d470e38c7,
};
static const uint16_t m_9532ea162ee61fa5[] = {0, 2, 3, 4, 1, 5};
static const uint16_t i_9532ea162ee61fa5[] = {0, 1, 2, 3, 4, 5};
const ::capnp::_::RawSchema s_9532ea162ee61fa5 = {
  0x9532ea162ee61fa5, b_9532ea162ee61fa5.words, 115, d_9532ea162ee61fa5, m_9532ea162ee61fa5,
  1, 6, i_9532ea162ee61fa5, nullptr, nullptr, { &s_9532ea162ee61fa5, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<34> b_c618e02d470e38c7 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    199,  56,  14,  71,  45, 224,  24, 198,
     39,   0,   0,   0,   2,   0,   0,   0,
    165,  31, 230,  46,  22, 234,  50, 149,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 154,   1,   0,   0,
     45,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  79,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105, 110, 116, 101, 114, 110,  97, 108,
     95, 109, 101, 115, 115,  97, 103, 101,
     46,  99,  97, 112, 110, 112,  58,  73,
    110, 116, 101, 114, 110,  97, 108,  77,
    101, 115, 115,  97, 103, 101,  46,  77,
    101, 115, 115,  97, 103, 101,  84, 121,
    112, 101,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   1,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 101, 110, 100,   0,   0,   0,   0,
    101,  99, 104, 111,  77, 101, 115, 115,
     97, 103, 101,   0,   0,   0,   0,   0,
    114, 101,  97, 100, 121,   0,   0,   0, }
};
::capnp::word const* const bp_c618e02d470e38c7 = b_c618e02d470e38c7.words;
#if !CAPNP_LITE
static const uint16_t m_c618e02d470e38c7[] = {1, 2, 0};
const ::capnp::_::RawSchema s_c618e02d470e38c7 = {
  0xc618e02d470e38c7, b_c618e02d470e38c7.words, 34, nullptr, m_c618e02d470e38c7,
  0, 3, nullptr, nullptr, nullptr, { &s_c618e02d470e38c7, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
CAPNP_DEFINE_ENUM(MessageType_c618e02d470e38c7, c618e02d470e38c7);
}  // namespace schemas
}  // namespace capnp

// =======================================================================================


// InternalMessage
#ifndef _MSC_VER
constexpr uint16_t InternalMessage::_capnpPrivate::dataWordSize;
constexpr uint16_t InternalMessage::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind InternalMessage::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* InternalMessage::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* InternalMessage::_capnpPrivate::brand;
#endif  // !CAPNP_LITE



